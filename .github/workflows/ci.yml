name: CI release

on:
  push:


jobs:
  build:
    name: ${{ matrix.build.id }}
    runs-on: ${{ matrix.build.os }}
    timeout-minutes: 60
    strategy:
      matrix:
        build:
        - id: macos
          os: macOS-latest
          args: '--release'
          target: ''
        - id: macos-arm64
          os: macOS-latest
          target: 'aarch64-apple-darwin'
          args: '--release --target=aarch64-apple-darwin'
        - id: windows
          os: windows-latest
          args: '--release'
          target: ''
        - id: linux
          os: ubuntu-latest
          args: '--release'
          target: ''

    env:
      GH_ACTIONS: true
      RUST_BACKTRACE: full

    steps:
      - name: Clone repository
        uses: actions/checkout@v2

      - name: Install stable rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          default: true
          target: ${{ matrix.build.target }}

      - name: Log versions
        run: |
          rustc --version
          cargo --version

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ matrix.build.id }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ matrix.build.id }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}
      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ matrix.build.id }}-cargo-build-target-${{ hashFiles('**/Cargo.lock') }}

      - name: Install webkit2gtk
        if: matrix.build.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install libwebkit2gtk-4.0-dev

      - name: arm targets
        if: matrix.build.id == 'macos-arm64'
        run: rustup target add aarch64-apple-darwin

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: ${{ matrix.build.args }}

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.build.id }}
          path: |
            target/release/libwebview_deno.dylib
            target/aarch64-apple-darwin/release/libwebview_deno.dylib
            target/release/libwebview_deno.so
            target/release/webview_deno.dll
            target/release/Webview2Loader.dll

      - name: Release Plugin
        uses: softprops/action-gh-release@master
        if: startsWith(github.ref, 'refs/tags/')
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "webview_deno release"
          draft: true
          files: |
            target/release/libwebview_deno.dylib
            target/release/libwebview_deno.so
            target/release/webview_deno.dll
            target/release/Webview2Loader.dll
