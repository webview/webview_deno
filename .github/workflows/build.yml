name: Build

on:
  push:
    branches:
      - main
      - update_webview
    # paths:
    #   - ".github/workflows/**"
    #   - "script/build.*"
    #   - "src/ffi.ts"
    #   - "webview/**"
    #   - ".gitmodules"
    #   - "deno.json"

jobs:
  build:
    name: ${{ matrix.kind }} ${{ matrix.os }} ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [macos-latest, macos-13, windows-latest, ubuntu-latest]
        arch: [amd64]
        include:
          - os: ubuntu-latest
            arch: arm64

    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: v2.x

      - name: install webkit2gtk (Linux amd64)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'amd64'
        run: |
          sudo apt-get update
          sudo apt-get install -y webkitgtk-6.0 libwebkitgtk-6.0-dev cmake ninja-build clang pkg-config libgtk-4-dev

      - name: install webkit2gtk (Linux arm64)
        if: matrix.os == 'ubuntu-latest' && matrix.arch == 'arm64'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc-aarch64-linux-gnu g++-aarch64-linux-gnu
          sudo apt-get install -y webkitgtk-6.0 libwebkitgtk-6.0-dev:arm64 cmake ninja-build clang pkg-config libgtk-4-dev:arm64

      - name: Install ninja (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install ninja
          brew install llvm
          echo "WEBVIEW_CLANG_FORMAT_EXE=$(brew --prefix llvm)/bin/clang-format" >> $GITHUB_ENV

      - name: Install ninja (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          choco install ninja

      - name: Build dynamic library
        env:
          ARCH: ${{ matrix.arch }}
        run: deno task build

      - name: Upload Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: |
            build/*.dll
            build/*.dylib
            build/*.so

#      - name: Release Plugin
#        uses: softprops/action-gh-release@master
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#        with:
#          tag_name: "webview_deno release"
#          draft: true
#          files: |
#            build/libwebview.x86_64.dylib
#            build/libwebview.so
#            build/webview.dll
#            build/Webview2Loader.dll
